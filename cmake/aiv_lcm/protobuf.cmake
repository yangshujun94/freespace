if (USE_CC_IECU2.0)
    message(STATUS "================  -] building IECU2.0 [-  ================")
    set(PROTOBUF_INCLUDE_DIRS ${THIRD_PART_PATH}/protobuf-3.3.0/iecu2.0/include)
    include_directories(${PROTOBUF_INCLUDE_DIRS})
    file(GLOB PROTOBUF_LIBS ${THIRD_PART_PATH}/protobuf-3.3.0/iecu2.0/lib/*.a)
    list(APPEND ALL_LIBRARIES ${PROTOBUF_LIBS})

    #find_package(Protobuf 3 REQUIRED)
    #include_directories(${Protobuf_INCLUDE_DIRS})
    #include_directories(${CMAKE_CURRENT_BINARY_DIR})
    #list(APPEND ALL_LIBRARIES ${Protobuf_LIBRARIES})
elseif (USE_CC_IECU3.1)
    message(STATUS "================  -] building IECU3.1 [-  ================")
    set(PROTOBUF_INCLUDE_DIRS ${THIRD_PART_PATH}/protobuf-3.6.1.3/iecu3.1/include)
    include_directories(${PROTOBUF_INCLUDE_DIRS})
    file(GLOB PROTOBUF_LIBS ${THIRD_PART_PATH}/protobuf-3.6.1.3/iecu3.1/lib/*.a)
    list(APPEND ALL_LIBRARIES ${PROTOBUF_LIBS})

    #find_package(Protobuf 3 REQUIRED)
    #include_directories(${Protobuf_INCLUDE_DIRS})
    #include_directories(${CMAKE_CURRENT_BINARY_DIR})
    #list(APPEND ALL_LIBRARIES ${Protobuf_LIBRARIES})
else ()
    message(STATUS "================  -] building x86-64 [-  ================")
    set(PROTOBUF_INCLUDE_DIRS ${PROJECT_SOURCE_DIR}/3rdparty/protobuf-3.3.x/include)
    include_directories(${PROTOBUF_INCLUDE_DIRS})
    file(GLOB PROTOBUF_LIBS ${PROJECT_SOURCE_DIR}/3rdparty/protobuf-3.3.x/lib/*.a)
    list(APPEND ALL_LIBRARIES ${PROTOBUF_LIBS})

    #find_package(Protobuf 3 REQUIRED)
    #include_directories(${Protobuf_INCLUDE_DIRS})
    #include_directories(${CMAKE_CURRENT_BINARY_DIR})
    #list(APPEND ALL_LIBRARIES ${Protobuf_LIBRARIES})
endif ()